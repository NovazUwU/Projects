local Main = {} 
Main.__index = Main 

function Main:new() 
    local Return = setmetatable({}, self)
    Return.Winner = false
    Return.PlayerMoving = "Player 1"
    Return.Board = {
      {"-", "-", "-"}, 
      {"-", "-", "-"}, 
      {"-", "-", "-"},
    }
    return Return
end 

function Main:HasWon() 
    local Board = self.Board 
    for i = 1, 3 do 
        local Data, Data1 = "", ""
        for i1 = 1, 3 do 
            Data = Data..Board[i][i1]
            Data1 = Data1..Board[i1][i]
        end  
        if Data == "XXX" or Data1 == "XXX" then 
            self.Winner = "Player 1" 
        elseif Data == "OOO" or Data1 == "OOO" then 
            self.Winner = "Player 2"
        end 
    end 
    local Data, Data1 = Board[1][1]..Board[2][2]..Board[3][3], Board[3][1]..Board[2][2]..Board[1][3]
    if Data == "XXX" or Data1 == "XXX" then 
        self.Winner = "Player 1" 
    elseif Data == "OOO" or Data1 == "OOO" then 
        self.Winner = "Player 2"
    end 
    return self.Winner
end 

function Main:PromptMove()
    print(self.PlayerMoving.." Input Coordinates: ")
    local MoveX, MoveY = io.read("n", "n", "l") 
    if MoveX > 3 or MoveY > 3 then return self:PromptMove() end
    Move = self.Board[MoveY]
    if Move[MoveX] ~= "-" then return self:PromptMove() end 
    Move[MoveX] = self.PlayerMoving:gsub("Player 1", "X"):gsub("Player 2", "O")
    self.PlayerMoving = self.PlayerMoving:gsub("1","f"):gsub("2","1"):gsub("f","2")
end 

function Main:ShowBoard() 
    for i = 1, 3 do 
        print(table.concat(self.Board[i], " "))
    end 
end 

function Start()
    local Game = Main:new()
    os.execute("cls")
    Game:ShowBoard()
    
    for i = 1, 10 do 
        if Game:HasWon() then 
            print(Game.Winner.." Wins!")
            break   
        elseif i == 10 then 
            print("--Tie!--")
        else 
            Game:PromptMove() 
            os.execute("cls")
            Game:ShowBoard() 
        end 
    end 
    print("Play Again? Y/N")
    if io.read("l"):match("Y") then 
        Start()
    end 
end 

Start()
